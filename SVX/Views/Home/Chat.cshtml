
@{
    ViewBag.Title = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model SVX.Models.Usuario

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Chats
    </h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="breadcrumb-item"><a href="#">Examples</a></li>
        <li class="breadcrumb-item active">Chats</li>
    </ol>
</section>


<!-- Main content -->
<section class="content">

    <div class="row">
        <div class="col-lg-3 col-md-12">
            <div class="box">
                <div class="box-header with-border p-0 pt-10">
                    <div class="form-element lookup">
                        <input class="form-control p-20 w-p100" type="text" placeholder="Search Contact">
                    </div>
                </div>
                <div class="box-body p-0">
                    <div id="chat-contact" class="media-list media-list-hover media-list-divided">


                    </div>
                </div>
            </div>
            <!-- /. box -->
        </div>
        <!-- /.col -->
        <div class="col-lg-9 col-md-12">
            <div class="box direct-chat">
                <div class="box-header with-border bg-lighter">
                    <h3 class="box-title">Chat Message</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <!-- Conversations are loaded here -->
                    <div id="chat-app" class="direct-chat-messages chat-app">
                    



                    </div>
                    <!--/.direct-chat-messages-->
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <form action="#" method="post">
                        <div class="input-group">
                            <input type="text" id="message" name="message" placeholder="Type Message ..." class="form-control">
                            <div class="input-group-addon">
                                <div class="align-self-end gap-items">
                                  
                                    <button class="publisher-btn"type="button" id="enviar-mensaje"><i class="fa fa-paper-plane"></i></button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- /.box-footer-->
            </div>
            <!-- /. box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->

</section>
<!-- /.content -->
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        @{
                    var usuario = (SVX.Models.Usuario) Session["Usuario"];

                }
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.getConversations = function (conversaciones) {
                // Add the message to the page.
                var idconver = GetURLParameter(6);
                var conversacionesDiv = "";
                 var idUsuario = @usuario.idUsuario;
                conversaciones.map((item) => {
                    conversacionesDiv += '<div class="media media-single ' + ((item.Mensaje[0].idConversacion == idconver) ?'bg-dark  text-white':'')+'">';

                    conversacionesDiv += '<div class="avatar avatar-xl">'+item.nombre.substring(0,1)+'</div>';



                    conversacionesDiv += '<div class="body-media">';
                    conversacionesDiv += '<h6><a class="' + ((item.Mensaje[0].idConversacion == idconver) ? 'text-white' : '') + '" href="/Home/Chat/' + ((item.Mensaje[0].idTo === idUsuario) ? item.Mensaje[0].idFrom : item.Mensaje[0].idTo) + '/' + item.Mensaje[0].idConversacion+'">'+item.nombre+'</a></h6>';


                    conversacionesDiv += '</div>';

                    conversacionesDiv += '</div>';
                });
                $('#chat-contact').html(conversacionesDiv);

            };

            chat.client.getMensajes = function (mensajes) {

                var mensajesDiv = "";
                var idUsuario = @usuario.idUsuario;
                mensajes.map(item => {
                    if (item.idFrom == idUsuario) {

                        mensajesDiv += '<div class="direct-chat-msg right mb-30">';

                        mensajesDiv += '<div class="direct-chat-text">';
                        mensajesDiv += '<p>';
                        mensajesDiv += '<span class="direct-chat-name">You</span><br />';
                        mensajesDiv += ''+item.mensaje1+'<br />';
                        mensajesDiv += '<small>' + item.fecha + '</small>';
                        mensajesDiv += '</p>';
                        mensajesDiv += '</div>';
                        mensajesDiv += '</div>';
                    }
                    else {
                        mensajesDiv += ' <div class="direct-chat-msg mb-30">';


                        mensajesDiv += ' <h1 class="direct-chat-img avatar">' + item.Usuario1.nombre.substring(0,1)+'</h1>';

                        mensajesDiv += '<div class="direct-chat-text">';

                        mensajesDiv += '<p>';
                        mensajesDiv += '<span class="direct-chat-name">' + item.Usuario1.nombre + '</span><br />';
                        mensajesDiv += '' + item.mensaje1 + '<br />';
                        mensajesDiv += '<small>' + item.fecha + '</small>';
                        mensajesDiv += '</p>';

                        mensajesDiv += '</div>';

                        mensajesDiv += '</div>';
                    }
                });

                $('#chat-app').html(mensajesDiv);


            }


            chat.client.addMensajes = function (idTo, idConversacion, idFrom,nombreFrom,mensaje, fecha) {

                var mensajesDiv = "";
                var idUsuario = @usuario.idUsuario;
                var nombre = nombreFrom;
                const state = {}
                const title = 'Chat'
                const url = 'https://localhost:44369/Home/Chat/'+idTo+'/'+idConversacion;
                    chat.server.readConversations(@usuario.idUsuario);
                history.replaceState(state, title, url);
                var conversacion = GetURLParameter(6);


                if (idConversacion == conversacion) {
                    if (idFrom == idUsuario) {

                        mensajesDiv += '<div class="direct-chat-msg right mb-30">';

                        mensajesDiv += '<div class="direct-chat-text">';
                        mensajesDiv += '<p>';
                        mensajesDiv += '<span class="direct-chat-name">You</span><br />';
                        mensajesDiv += '' + mensaje + '<br />';
                        mensajesDiv += '<small>' + fecha + '</small>';
                        mensajesDiv += '</p>';
                        mensajesDiv += '</div>';
                        mensajesDiv += '</div>';


                    }else {
                        mensajesDiv += ' <div class="direct-chat-msg mb-30">';


                        mensajesDiv += ' <h1 class="direct-chat-img avatar">' + nombre.substring(0, 1) + '</h1>';

                        mensajesDiv += '<div class="direct-chat-text">';

                        mensajesDiv += '<p>';
                        mensajesDiv += '<span class="direct-chat-name">' + nombre + '</span><br />';
                        mensajesDiv += '' + mensaje+ '<br />';
                        mensajesDiv += '<small>'+fecha+'</small>';
                        mensajesDiv += '</p>';

                        mensajesDiv += '</div>';

                        mensajesDiv += '</div>';

                    }
                    $('#chat-app').append(mensajesDiv);
                    $("#chat-app").animate({ scrollTop: 20000000 }, "slow");


                }
            }
            function scrollToBottom() {
                messages.scrollTop = messages.scrollHeight;
            }
            // Get the user name and store it to prepend to messages.

            // Set initial focus to message input box.
            if (GetURLParameter(6) !== 0) {
                $('#message').focus();
                $("#message").prop("readonly", false);
                $("#enviar-mensaje").prop("disabled", false);
            } else {
                $("#message").prop("readonly", true);
                $("#enviar-mensaje").prop("disabled", true);
            }


            // Start the connection.
            $.connection.hub.start().done(function () {

                    // Call the Send method on the hub.
                var idconversacion = GetURLParameter(6);
                if (idconversacion !== 0) {
                    chat.server.joinRoom(idconversacion);
                }

                     getMensajes(chat, idconversacion);
                        $('#enviar-mensaje').click(function () {
                            var mensaje = $('#message').val();
                            var idconver = GetURLParameter(6);
                            var idto = GetURLParameter(5);
                            const conversacion = sessionStorage.getItem('nombreConver');
                            if ( @usuario.idUsuario !== idto) {
                                chat.server.send(idto, idconver, @usuario.idUsuario, '@usuario.nombre', mensaje, conversacion);

                            } else {

                            }
                            $('#message').val('');
                        });

                        chat.server.readConversations(@usuario.idUsuario);



                });

        });
        function getMensajes(chat, idConversacion) {
            chat.server.readMenesajes(idConversacion);
        }
        function GetURLParameter(posicion) {
            var sPageURL = window.location.href;
            return sPageURL.split('/')[posicion];
        }
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}